#include <SoftwareSerial.h>

SoftwareSerial mySerial(12, 13); // RX, TX

// Î™®ÌÑ∞ ÌïÄ ÏÑ§Ï†ï
const int pin_l_num1 = 6;   // ÏôºÏ™Ω Î™®ÌÑ∞ ÏûÖÎ†• 1
const int pin_l_num2 = 5;  // ÏôºÏ™Ω Î™®ÌÑ∞ ÏûÖÎ†• 2
const int pin_r_num1 = 11;  // Ïò§Î•∏Ï™Ω Î™®ÌÑ∞ ÏûÖÎ†• 1
const int pin_r_num2 = 10;  // Ïò§Î•∏Ï™Ω Î™®ÌÑ∞ ÏûÖÎ†• 2

// Î™®ÌÑ∞ ÌïÄ ÏÑ§Ï†ï(ÏÜçÎèÑ Î≥¥Ï†ï)
const int baseSpeed = 30;
int speed_l = baseSpeed + 8;
int speed_r = baseSpeed;


//ÏóîÏΩîÎçî ÏÑ§Ï†ï
int A_ENCODER = 2;
int B_ENCODER = 3;

volatile int encoder_left = 0;
volatile int encoder_right = 0;

unsigned long currentTime = 0;
unsigned long lastAdjustTime = 0;


bool moving = false;
String cmd = "";


void setup() {
  Serial.begin(9600);
  delay(2000);
  mySerial.begin(9600);

  // Î™®ÌÑ∞ ÌïÄÏùÑ Ï∂úÎ†•ÏúºÎ°ú ÏÑ§Ï†ï
  pinMode(pin_l_num1, OUTPUT);
  pinMode(pin_l_num2, OUTPUT);

  pinMode(pin_r_num1, OUTPUT);
  pinMode(pin_r_num2, OUTPUT);


  //ÏóîÏΩîÎçî ÌïÄ ÏÑ§
  pinMode(A_ENCODER, INPUT_PULLUP);
  pinMode(B_ENCODER, INPUT_PULLUP);
  attachInterrupt(digitalPinToInterrupt(2), countLeft, RISING);
  attachInterrupt(digitalPinToInterrupt(3), countRight, RISING);
}

void loop() {
  currentTime = millis();

  // Î™ÖÎ†π ÏàòÏã†
  if (mySerial.available()) {
    cmd = mySerial.readStringUntil('\n');
    cmd.trim();
    Serial.print("üì• ÏàòÏã† Î™ÖÎ†π: ");
    Serial.println(cmd);


    //ÌååÏù¥Ïç¨ÏúºÎ°ú Î∂ÄÌÑ∞ ÏàòÏã†Î™ÖÎ†π Ï≤òÎ¶¨
    if(cmd == "m"){
      analogWrite(pin_l_num1, map(speed_l, 0, 100, 0, 255));
      analogWrite(pin_l_num2, LOW);

      analogWrite(pin_r_num1, map(speed_r, 0, 100, 0, 255));
      analogWrite(pin_r_num2, LOW);
      moving = true;
    }else if(cmd == "s"){
      analogWrite(pin_l_num1, LOW);
      analogWrite(pin_l_num2, LOW);

      analogWrite(pin_r_num1, LOW);
      analogWrite(pin_r_num2, LOW);
      moving = false;
    }else if(cmd == "b"){
      analogWrite(pin_l_num1, LOW);
      analogWrite(pin_l_num2, map(speed_l, 0, 100, 0, 255));

      analogWrite(pin_r_num1, LOW);
      analogWrite(pin_r_num2, map(speed_r, 0, 100, 0, 255));
      moving = true;
    }else if(cmd == "l"){
      analogWrite(pin_l_num1, LOW);
      analogWrite(pin_l_num2, map(speed_l, 0, 100, 0, 255));

      analogWrite(pin_r_num1, LOW);
      analogWrite(pin_r_num2, LOW);
      moving = true;
    }else if(cmd == "r"){
      analogWrite(pin_l_num1, LOW);
      analogWrite(pin_l_num2, LOW);

      analogWrite(pin_r_num1, LOW);
      analogWrite(pin_r_num2, map(speed_r, 0, 100, 0, 255));
      moving = true;
    }

  }

  
  // ÏóîÏΩîÎçî Ï≤òÎ¶¨(Ïù¥Îèô Ï§ëÏùº ÎïåÎßå Ï†ÅÏö©)
  if (moving && (currentTime - lastAdjustTime >= 50)) {
    lastAdjustTime = currentTime;

    mySerial.print("EncL/R: ");
    mySerial.print(encoder_left);
    mySerial.print("/");
    mySerial.println(encoder_right);
  }
  delay(1);
}

// Ïù∏ÌÑ∞ÎüΩÌä∏
void countLeft() {
  encoder_left++;
}
void countRight() {
  encoder_right++;
}


